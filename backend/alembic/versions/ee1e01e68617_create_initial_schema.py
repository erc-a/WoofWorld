"""create initial schema

Revision ID: ee1e01e68617
Revises: 
Create Date: 2025-05-15 03:14:48.623334

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'ee1e01e68617'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('dog_facts', sa.Column('content', sa.Text(), nullable=False))
    op.drop_column('dog_facts', 'fact')
    op.drop_column('dog_facts', 'create_at')
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=True,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.drop_constraint('users_email_key', 'users', type_='unique')
    op.create_unique_constraint(op.f('uq_users_email'), 'users', ['email'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('uq_users_email'), 'users', type_='unique')
    op.create_unique_constraint('users_email_key', 'users', ['email'])
    op.alter_column('users', 'created_at',
               existing_type=postgresql.TIMESTAMP(),
               nullable=False,
               existing_server_default=sa.text('CURRENT_TIMESTAMP'))
    op.add_column('dog_facts', sa.Column('create_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('dog_facts', sa.Column('fact', sa.TEXT(), autoincrement=False, nullable=True))
    op.drop_column('dog_facts', 'content')
    # ### end Alembic commands ###
